apiVersion: apps/v1
kind: Deployment
metadata:
  name: authelia
  labels:
    app: authelia
spec:
  replicas: 1
  selector:
    matchLabels:
      app: authelia
  template:
    metadata:
      labels:
        app: authelia
      annotations:
        vault.hashicorp.com/agent-inject: "true"
        vault.hashicorp.com/agent-inject-status: "update"
        vault.hashicorp.com/role: "authelia"
        vault.hashicorp.com/secret-volume-path: "/config"
        vault.hashicorp.com/agent-inject-secret-configuration.yml: "authelia/data/config"
        vault.hashicorp.com/agent-inject-template-configuration.yml: |
          theme: dark

          certificates_directory: /mnt/certs

          {{ with secret "authelia/data/config" }}
          jwt_secret: {{ .Data.data.jwtSecret }}
          default_redirection_url: https://{{ .Data.data.domain }}/
          default_2fa_method: ""
          {{ end }}


          server:
            host: 0.0.0.0
            port: 80
            path: ""
            # asset_path: /config/assets/
            read_buffer_size: 4096
            write_buffer_size: 4096

            enable_pprof: false
            enable_expvars: false
            disable_healthcheck: false

            tls:
              key: ""
              certificate: ""
              client_certificates: []

            headers:
              csp_template: ""

          log:
            level: info
            # json / text
            format: json
            # file_path: /config/authelia.log
            # keep_stdout: false

          totp:
            disable: false
            issuer: sso.{{ with secret "authelia/data/config" }}{{ .Data.data.domain }}{{ end }}
            algorithm: sha1
            digits: 6
            period: 30
            skew: 1
            secret_size: 32

          webauthn:
            disable: false
            timeout: 60s
            display_name: {{ with secret "authelia/data/config" }}{{ .Data.data.domain }}{{ end }}
            attestation_conveyance_preference: indirect
            user_verification: preferred

          duo_api:
            disable: true

          ntp:
            address: "time.cloudflare.com:123"
            version: 4
            max_desync: 3s
            disable_startup_check: false
            disable_failure: false

          {{ with secret "openldap/data/config" }}
          authentication_backend:
            disable_reset_password: false
            refresh_interval: 5m

            ldap:
              implementation: custom
              url: ldap://openldap
              timeout: 5s
              start_tls: true

              tls:
                server_name: openldap
                skip_verify: false
                minimum_version: TLS1.2

              base_dn: {{ .Data.data.root }}

              additional_users_dn: ou=users

              users_filter: (&({username_attribute}={input})(objectClass=inetOrgPerson))
              username_attribute: cn
              mail_attribute: mail
              display_name_attribute: displayName

              # https://github.com/authelia/authelia/issues/1517#issuecomment-745572033
              groups_filter: (&(uniquemember={dn})(objectclass=groupOfUniqueNames))
              group_name_attribute: cn


              permit_referrals: false

              user: cn=admin,{{ .Data.data.root }}
              password: {{ .Data.data.adminPassword }}
          {{ end }}

          password_policy:
            zxcvbn:
              enabled: true
              min_score: 3

          {{ with secret "authelia/data/config" }}
          access_control:
            default_policy: deny

            networks:
              - name: local
                networks: 10.1.1.0/24
              - name: VPN
                networks: 10.0.0.0/24

            rules:
              # Vaultwarden Admin panel
              - domain: 'vault.{{ .Data.data.domain }}'
                policy: two_factor
                resources:
                  - "^/admin([/?].*)?$"
                subject:
                  - ["group:admin"]

              # Media management
              - domain: 'media.{{ .Data.data.domain }}'
                policy: two_factor
                subject:
                  - ["group:admin"]
                  - ["group:media"]
                resources:
                  - "^/radarr([/?].*)?$"
                  - "^/sonarr([/?].*)?$"
                  - "^/jackett([/?].*)?$"
                  - "^/transmission([/?].*)?$"
                  - "^/bazarr([/?].*)?$"

              # Admin only
              - domain:
                - 'n.{{ .Data.data.domain }}'
                - 'lh.{{ .Data.data.domain }}'
                - 'd.{{ .Data.data.domain }}'
                - 'minio.{{ .Data.data.domain }}'
                - 'ldap.{{ .Data.data.domain }}'
                - 'pihole.{{ .Data.data.domain }}'
                - 'kube.{{ .Data.data.domain }}'
                - 'grafana.{{ .Data.data.domain }}'
                policy: two_factor
                subject:
                  - ["group:admin"]

              # 1FA login
              - domain:
                - '{{ .Data.data.domain }}'
                - 'download.{{ .Data.data.domain }}'
                policy: one_factor

              # Completely public
              - domain:
                - 'sso.{{ .Data.data.domain }}'
                - 'notify.{{ .Data.data.domain }}'
                - 'paste.{{ .Data.data.domain }}'
                - 'media.{{ .Data.data.domain }}'
                # Note: Admin API is not public
                - 'vault.{{ .Data.data.domain }}'
                - 'l.{{ .Data.data.domain }}'
                - 'etesync.{{ .Data.data.domain }}'
                policy: bypass
          {{ end }}

          session:
            name: sso_session
            domain: {{ with secret "authelia/data/config" }}{{ .Data.data.domain }}{{ end }}
            same_site: lax
            secret: {{ with secret "authelia/data/config" }}{{ .Data.data.sessionSecret }}{{ end }}
            expiration: 1h
            inactivity: 5m
            remember_me_duration: 1M

            redis:
              host: keydb
              port: 6379
              password: {{ with secret "keydb/data/config" }}{{ .Data.data.password }}{{ end }}

              database_index: 0
              maximum_active_connections: 8
              minimum_idle_connections: 0

          regulation:
            max_retries: 3
            find_time: 2m
            ban_time: 15m

          storage:
            encryption_key: {{ with secret "authelia/data/config" }}{{ .Data.data.encryptionKey }}{{ end }}

            postgres:
              host: stolon-proxy
              port: 5432
              database: authelia
              schema: public
              username: authelia
              password: {{ with secret "database/static-creds/authelia" }}{{ .Data.password }}{{ end }}
              timeout: 5s
              ssl:
                mode: disable
                root_certificate: disable
                certificate: disable
                key: disable


          notifier:
            disable_startup_check: false

            {{ with secret "email/data/system" }}
            smtp:
              host: {{ .Data.data.host }}
              port: 465
              timeout: 5s
              username: {{ .Data.data.username }}
              password: {{ .Data.data.password }}
              sender: "SSO <{{ .Data.data.username }}>"
              identifier: localhost
              subject: "[SSO on {{ with secret "authelia/data/config" }}{{ .Data.data.domain }}{{ end }}] {title}"
              startup_check_address: test@authelia.com
              disable_require_tls: false
              disable_html_emails: false

              tls:
                skip_verify: false
                minimum_version: TLS1.2
            {{ end }}
        vault.hashicorp.com/tls-skip-verify: "true"
    spec:
      serviceAccountName: authelia
      containers:
        - name: authelia
          # https://hub.docker.com/r/authelia/authelia/tags
          # https://github.com/authelia/authelia/releases
          image: authelia/authelia:4.35.6
          ports:
            - containerPort: 80
              name: http
          volumeMounts:
            # TLS
            - mountPath: /mnt/certs
              name: openldap-tls
              readOnly: false
          resources:
            limits:
              memory: 300Mi
              cpu: 200m
            requests:
              memory: 100Mi
              cpu: 109m
      volumes:
        - name: openldap-tls
          secret:
            secretName: openldap-tls
